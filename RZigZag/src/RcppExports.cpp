// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// ZigZagGaussian
List ZigZagGaussian(const Eigen::MatrixXd V, const Eigen::VectorXd mu, int n_iter, double finalTime, const NumericVector x0, const NumericVector v0);
RcppExport SEXP _RZigZag_ZigZagGaussian(SEXP VSEXP, SEXP muSEXP, SEXP n_iterSEXP, SEXP finalTimeSEXP, SEXP x0SEXP, SEXP v0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd >::type V(VSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd >::type mu(muSEXP);
    Rcpp::traits::input_parameter< int >::type n_iter(n_iterSEXP);
    Rcpp::traits::input_parameter< double >::type finalTime(finalTimeSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type v0(v0SEXP);
    rcpp_result_gen = Rcpp::wrap(ZigZagGaussian(V, mu, n_iter, finalTime, x0, v0));
    return rcpp_result_gen;
END_RCPP
}
// ZigZagLogistic
List ZigZagLogistic(const Eigen::MatrixXd& dataX, const Eigen::VectorXi& dataY, int n_iter, double finalTime, const NumericVector x0, const NumericVector v0, bool cv);
RcppExport SEXP _RZigZag_ZigZagLogistic(SEXP dataXSEXP, SEXP dataYSEXP, SEXP n_iterSEXP, SEXP finalTimeSEXP, SEXP x0SEXP, SEXP v0SEXP, SEXP cvSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type dataX(dataXSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXi& >::type dataY(dataYSEXP);
    Rcpp::traits::input_parameter< int >::type n_iter(n_iterSEXP);
    Rcpp::traits::input_parameter< double >::type finalTime(finalTimeSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type v0(v0SEXP);
    Rcpp::traits::input_parameter< bool >::type cv(cvSEXP);
    rcpp_result_gen = Rcpp::wrap(ZigZagLogistic(dataX, dataY, n_iter, finalTime, x0, v0, cv));
    return rcpp_result_gen;
END_RCPP
}
// ZigZagStudentT
List ZigZagStudentT(double dof, int dim, int n_iter, double finalTime, const NumericVector x0, const NumericVector v0);
RcppExport SEXP _RZigZag_ZigZagStudentT(SEXP dofSEXP, SEXP dimSEXP, SEXP n_iterSEXP, SEXP finalTimeSEXP, SEXP x0SEXP, SEXP v0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type dof(dofSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< int >::type n_iter(n_iterSEXP);
    Rcpp::traits::input_parameter< double >::type finalTime(finalTimeSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type v0(v0SEXP);
    rcpp_result_gen = Rcpp::wrap(ZigZagStudentT(dof, dim, n_iter, finalTime, x0, v0));
    return rcpp_result_gen;
END_RCPP
}
// ZigZagIIDGaussian
List ZigZagIIDGaussian(double variance, int dim, int n_iter, double finalTime, const NumericVector x0, const NumericVector v0);
RcppExport SEXP _RZigZag_ZigZagIIDGaussian(SEXP varianceSEXP, SEXP dimSEXP, SEXP n_iterSEXP, SEXP finalTimeSEXP, SEXP x0SEXP, SEXP v0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type variance(varianceSEXP);
    Rcpp::traits::input_parameter< int >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< int >::type n_iter(n_iterSEXP);
    Rcpp::traits::input_parameter< double >::type finalTime(finalTimeSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type v0(v0SEXP);
    rcpp_result_gen = Rcpp::wrap(ZigZagIIDGaussian(variance, dim, n_iter, finalTime, x0, v0));
    return rcpp_result_gen;
END_RCPP
}
// EstimateESS
List EstimateESS(const List& skeletonList, int n_batches, int coordinate);
RcppExport SEXP _RZigZag_EstimateESS(SEXP skeletonListSEXP, SEXP n_batchesSEXP, SEXP coordinateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type skeletonList(skeletonListSEXP);
    Rcpp::traits::input_parameter< int >::type n_batches(n_batchesSEXP);
    Rcpp::traits::input_parameter< int >::type coordinate(coordinateSEXP);
    rcpp_result_gen = Rcpp::wrap(EstimateESS(skeletonList, n_batches, coordinate));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RZigZag_ZigZagGaussian", (DL_FUNC) &_RZigZag_ZigZagGaussian, 6},
    {"_RZigZag_ZigZagLogistic", (DL_FUNC) &_RZigZag_ZigZagLogistic, 7},
    {"_RZigZag_ZigZagStudentT", (DL_FUNC) &_RZigZag_ZigZagStudentT, 6},
    {"_RZigZag_ZigZagIIDGaussian", (DL_FUNC) &_RZigZag_ZigZagIIDGaussian, 6},
    {"_RZigZag_EstimateESS", (DL_FUNC) &_RZigZag_EstimateESS, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_RZigZag(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
